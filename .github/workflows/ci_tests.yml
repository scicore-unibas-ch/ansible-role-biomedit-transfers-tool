---

name: "CI tests"

on:
  pull_request:
  push:
  release:
    types:
      - published
  schedule:
    - cron: "0 7 * * 0"

defaults:
  run:
    working-directory: 'ansible-role-biomedit-transfers-tool'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-role-biomedit-transfers-tool'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint ansible-lint ansible

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint .

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - centos7
          - centos8
          - ubuntu2004
          # - ubuntu1804
          # - debian10
          # - debian9
          # - fedora34

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-role-biomedit-transfers-tool'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule[docker] docker yamllint ansible-lint

      - name: disable apparmor on ubuntu systems
        run: |
            set -x
            sudo apt-get install apparmor-profiles
            sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
            sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
        if: ${{ startsWith(matrix.distro, 'ubuntu') }}

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  release:
    name: Release to galaxy
    needs:
      - lint
      - molecule
    runs-on: ubuntu-latest
    steps:
      - name: galaxy
        uses: robertdebock/galaxy-action@1.1.0
        with:
          galaxy_api_key: ${{ secrets.galaxy_api_key }}
